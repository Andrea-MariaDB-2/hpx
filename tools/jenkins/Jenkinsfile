#!groovy

pipeline {
    agent {
        node {
            label 'ssl_daintvm1'
        }
    }
    environment {
        SPACK_ROOT = '/apps/daint/SSL/HPX/spack'
    }
    stages {
        stage('checkout') {
            steps {
                dir('hpx') {
                    checkout scm
                    echo "Running ${env.BUILD_ID} on ${env.JENKINS_URL}"
                }
            }
        }
        stage('build') {
            matrix {
                axes {
                    axis {
                        name 'configuration_name'
                        values 'gcc-newest', 'gcc-oldest'
                    }
                }
                stages {
                    stage('build') {
                        steps {
                            dir('hpx') {
                                sh '''
                                #!/bin/bash -l
                                set -e
                                echo change_id: ${CHANGE_ID}
                                echo branch_name: ${BRANCH_NAME}
                                #echo ${ghprbActualCommit}
                                #echo ${ghprbActualCommitAuthor}
                                #echo ${ghprbActualCommitEmail}
                                #echo ${ghprbPullDescription}
                                #echo ${ghprbPullId}
                                #echo ${ghprbPullLink}
                                #echo ${ghprbPullTitle}
                                #echo ${ghprbSourceBranch}
                                #echo ${ghprbTargetBranch}
                                #echo ${ghprbCommentBody}
                                #echo ${sha1}
                                source tools/jenkins/slurm-constraint-${configuration_name}.sh
                                sbatch \
                                    --job-name=jenkins-hpx-${configuration_name} \
                                    --nodes=1 \
                                    --constraint=${configuration_slurm_constraint} \
                                    --partition=cscsci \
                                    --time=02:00:00 \
                                    --output=jenkins-hpx-${configuration_name}.out \
                                    --error=jenkins-hpx-${configuration_name}.err \
                                    --wait tools/jenkins/batch.sh
                                echo "= stdout =================================================="
                                cat jenkins-hpx-${configuration_name}.out
                                echo "= stderr =================================================="
                                cat jenkins-hpx-${configuration_name}.err
                                '''
                            }
                        }
                    }
                }
            }
        }
    }

    post {
        always {
            archiveArtifacts artifacts: '**/jenkins-hpx-*.*', fingerprint: true
        }
    }
}
